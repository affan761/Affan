local Players = game:GetService("Players")
local player = Players.LocalPlayer

local lol = Instance.new("ScreenGui")
lol.Name = "lol"
lol.Parent = player:WaitForChild("PlayerGui")
lol.ResetOnSpawn = false
lol.ResetOnSpawn = true
lol.ZIndexBehavior = Enum.ZIndexBehavior.Global
lol.DisplayOrder = 0
lol.IgnoreGuiInset = false
lol.Enabled = true
lol.SelectionGroup = false

local Frame = Instance.new("Frame")
Frame.Name = "Frame"
Frame.Parent = lol
Frame.Size = UDim2.new(0, 200, 0, 200)
Frame.Position = UDim2.new(0, 0, 0, 0)
Frame.AnchorPoint = Vector2.new(0, 0)
Frame.Visible = true
Frame.BackgroundColor3 = Color3.fromRGB(162, 162, 162)
Frame.BackgroundTransparency = 0
Frame.BorderColor3 = Color3.fromRGB(27, 42, 53)
Frame.BorderSizePixel = 1
Frame.ClipsDescendants = false
Frame.LayoutOrder = 0
Frame.Selectable = false
Frame.SelectionGroup = false
Frame.SizeConstraint = Enum.SizeConstraint.RelativeXY
Frame.Rotation = 0
Frame.AutomaticSize = Enum.AutomaticSize.None
Frame.Transparency = 0
Frame.Rotation = 0
Frame.Transparency = 0

-- Scripts:

coroutine.wrap(SMIAOGD_fake_script)()
local function NFCJZ_fake_script() -- Frame.Script 
	local script = Instance.new(LocalScript'Frame)

local function dragify(Main)
    if not Main then return error("Invalid Main object provided to dragify") end --Error handling
        
        local dragToggle = false
        local dragSpeed = 0.95 
        local dragInput = nil
        local initialDragPosition = nil
        local initialPosition = nil
        
        local function updateInput(input)
            local delta = input.Position - initialDragPosition
            local newPosition = UDim2.new(initialPosition.X.Scale, initialPosition.X.Offset + delta.X * dragSpeed, initialPosition.Y.Scale, initialPosition.Y.Offset + delta.Y * dragSpeed)
            game:GetService("TweenService"):Create(Main, TweenInfo.new(0.15, Enum.EasingStyle.Linear), {Position = newPosition}):Play() --Adjusted Tween time and easing
        end
        
        Main.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragToggle = true
                initialDragPosition = input.Position
                initialPosition = Main.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        Main.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragToggle then
                updateInput(input)
            end
        end)
    end
    
    dragify(script.Parent)

